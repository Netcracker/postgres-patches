name: Build Deb packages

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      pg-version:
        description: PostgreSQL version (branch в salsa.debian.org)
        type: choice
        required: true
        options: ['17','16','15']
      tag:
        description: Тег для upstream postgres/postgres и для релиза
        type: string
        required: true
      patch-source-dir:
        description: Путь к папке с патчами внутри этого репо
        type: string
        default: 'postgres-patches/patches-17'
      archive-ext:
        description: Расширение архива исходников (zip или tar.gz)
        type: choice
        required: true
        options: ['tar.gz','zip']
        default: 'tar.gz'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo (с патчами)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download source archive for tag `${{ inputs.tag }}`
        run: |
          EXT=${{ inputs.archive-ext }}
          TAG=${{ inputs.tag }}
          echo "::group::Download PostgreSQL sources for tag $TAG"
          URL="https://github.com/postgres/postgres/archive/${TAG}.${EXT}"
          echo "Downloading $URL → postgres-${TAG}.${EXT}"
          wget --progress=dot:giga "$URL" -O postgres-${TAG}.${EXT}
          echo "::endgroup::"

      - name: Extract sources
        run: |
          TAG=${{ inputs.tag }}
          EXT=${{ inputs.archive-ext }}
          echo "::group::Extract PostgreSQL sources"
          if [ "$EXT" = "zip" ]; then
            unzip -q postgres-${TAG}.zip
          else
            tar -xzf postgres-${TAG}.tar.gz
          fi
          # GitHub всегда создаёт папку postgres-<TAG>
          mv postgres-${TAG} postgres-src
          ls -1 postgres-src
          echo "::endgroup::"

      - name: Get Debian packaging
        run: |
          echo "::group::Get Debian packaging"
          git clone https://salsa.debian.org/postgresql/postgresql.git deb/postgresql
          cd deb/postgresql
          git checkout ${{ inputs.pg-version }}
          echo "::endgroup::"

      - name: Apply Debian packaging + local patches
        run: |
          echo "::group::Prepare source for build"
          cp -R deb/postgresql/debian postgres-src/debian
          cp -ur "${GITHUB_WORKSPACE}/${{ inputs.patch-source-dir }}/"* \
            postgres-src/debian/patches/
          cat "${GITHUB_WORKSPACE}/${{ inputs.patch-source-dir }}/series" \
            >> postgres-src/debian/patches/series
          echo "::endgroup::"
          echo "::group::Final series file::"
          cat postgres-src/debian/patches/series
          echo "::endgroup::"

      - name: Verify patches with quilt
        run: |
          echo "::group::Verify patches with quilt"
          cd postgres-src
          sudo apt-get update && sudo apt-get install -y quilt
          export QUILT_PATCHES=debian/patches
          quilt push -a
          echo "Applied patches:"
          quilt applied
          echo "::endgroup::"

      - name: Install build prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y --fix-missing \
            flex bison libicu-dev libperl-dev tcl krb5-multidev \
            debhelper-compat dh-exec docbook-xsl gdb gettext dpkg-dev \
            libio-pty-perl libipc-run-perl libkrb5-dev libldap2-dev libpam-dev \
            libreadline-dev libselinux1-dev libssl-dev libsystemd-dev build-essential \
            libxml2-dev libxml2-utils libxslt1-dev pkg-config clang llvm-dev \
            python3-dev systemtap-sdt-dev tcl-dev uuid-dev xsltproc libz-dev

      - name: Build PostgreSQL deb packages
        working-directory: postgres-src
        run: |
          echo "::group::Build deb packages"
          dpkg-buildpackage -rfakeroot -b -uc -us
          echo "::endgroup::"
          echo "distribution_root=$(realpath ..)" >> $GITHUB_ENV

      - name: Create Release
        uses: netcracker/qubership-workflow-hub/actions/tag-action@main
        with:
          ref: ${{ github.ref_name }}
          tag-name: ${{ inputs.tag }}
          switch-to-tag: true
          create-release: true
          skip-checkout: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Debian packages
        uses: netcracker/qubership-workflow-hub/actions/assets-action@main
        with:
          tag: ${{ inputs.tag }}
          item-path: ${{ env.distribution_root }}/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
